{"version":3,"sources":["Components/Dialog/Dialogs.module.css","hoc/WithAythRedirect.js","Components/Dialog/DialogItem/DialogItem.tsx","Components/Dialog/Message/Message.tsx","Components/Dialog/Dialogs.tsx","Components/Dialog/DialogsConteiner.tsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","dialog","newMessage","addMessageBtn","mapStateToProps","state","isAuth","getIsAuthValue","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","D_React_SN_my_project1_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","_super","_createSuper","D_React_SN_my_project1_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","apply","arguments","D_React_SN_my_project1_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","DialogItem","react_default","className","s","react_router_dom","id","name","Message","message","maxLength","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextAria","placeholder","validate","required","type","Dialogs","dialogsPage","dialogsElements","map","d","Dialog_DialogItem_DialogItem","dialogName","messagesElements","m","Dialog_Message_Message","values","sendMessage","compose","getDialogsPage"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,0BAAAC,OAAA,wBAAAC,WAAA,4BAAAC,cAAA,8mBCIlB,IAAIC,EAAgB,SAACC,GACjB,MAAM,CACFC,OAAOC,YAAeF,KAInBG,EAAiB,SAACC,GAAY,IAC/BC,EAD+B,SAAAC,GAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAAC,GAAA,IAAAG,EAAAC,EAAAL,GAAA,SAAAA,IAAA,OAAAE,OAAAI,EAAA,EAAAJ,CAAAK,KAAAP,GAAAI,EAAAI,MAAAD,KAAAE,WAAA,OAAAP,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAG7B,OAAIL,KAAKM,MAAMjB,OACRkB,EAAAC,EAAAC,cAACjB,EAAcQ,KAAKM,OADGC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAI,eAHflB,EAAA,CACLmB,IAAMpB,WAMtC,OAAOqB,YAAQ1B,EAAR0B,CAAyBpB,2FCGrBqB,EAhBI,SAACR,GAEhB,OAEIS,EAAAP,EAAAC,cAAA,OAAKO,UAAWC,IAAEjC,OAAS,IAAMiC,IAAEnC,QAC/BiC,EAAAP,EAAAC,cAACS,EAAA,EAAD,CAASP,GAAI,YAAcL,EAAMa,IAAKb,EAAMc,QCQzCC,EAdC,SAACf,GACb,OACIS,EAAAP,EAAAC,cAAA,OAAKO,UAAWC,IAAEK,SACdP,EAAAP,EAAAC,cAAA,WACCH,EAAMgB,6CCAbC,EAAUC,YAAiB,IA8C3BC,EAAoBC,YAAU,CAChCC,KAAK,UADiBD,CAlBH,SAACpB,GACpB,OACIS,EAAAP,EAAAC,cAAA,QAAMmB,SAAUtB,EAAMuB,cAElBd,EAAAP,EAAAC,cAAA,WACIM,EAAAP,EAAAC,cAACqB,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAM,aACNa,YAAY,qBACZjB,UAAWC,IAAEhC,WACpBiD,SAAU,CAACC,IAASZ,MAExBR,EAAAP,EAAAC,cAAA,OAAKO,UAAWC,IAAE/B,eACd6B,EAAAP,EAAAC,cAAA,UAAQ2B,KAAK,UAAb,aAWDC,EAjDC,SAAC/B,GACb,IAAIlB,EAAQkB,EAAMgC,YACdC,EAAkBnD,EAAMR,QAAQ4D,IAAI,SAACC,GAAD,OACpC1B,EAAAP,EAAAC,cAACiC,EAAD,CAAYvB,GAAIsB,EAAEtB,GAAIC,KAAMqB,EAAEE,WAAYvC,IAAKqC,EAAEtB,OAEjDyB,EAAmBxD,EAAML,SAASyD,IAAI,SAACK,GAAD,OACtC9B,EAAAP,EAAAC,cAACqC,EAAD,CAAS1C,IAAKyC,EAAE1B,GAAIG,QAASuB,EAAEvB,YAOnC,OAAOP,EAAAP,EAAAC,cAAA,OAAKO,UAAWC,IAAErC,SAErBmC,EAAAP,EAAAC,cAAA,OAAKO,UAAWC,IAAEpC,cACb0D,GAELxB,EAAAP,EAAAC,cAAA,OAAKO,UAAWC,IAAElC,UACdgC,EAAAP,EAAAC,cAAA,WAAMmC,GACN7B,EAAAP,EAAAC,cAACgB,EAAD,CAAqBG,SAZT,SAACmB,GACjBzC,EAAM0C,YAAYD,EAAO9D,YACzB8D,EAAO9D,WAAW,kDCPXgE,sBACX1D,IACAsB,YAPoB,SAACzB,GACrB,MAAO,CACHkD,YAAaY,YAAe9D,KAKP,CAAC4D,kBAFfC,CAGbZ","file":"static/js/5.c605850a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Q7kN\",\"dialogsItems\":\"Dialogs_dialogsItems__1WBNo\",\"active\":\"Dialogs_active__1WGpW\",\"messages\":\"Dialogs_messages__3ML08\",\"dialog\":\"Dialogs_dialog__2vcs1\",\"newMessage\":\"Dialogs_newMessage__mrjHs\",\"addMessageBtn\":\"Dialogs_addMessageBtn__2JGo4\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {getIsAuthValue} from \"../redux/Selectors/selectors\";\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        isAuth:getIsAuthValue(state)\r\n    }\r\n};\r\n\r\nexport let withAuthRedirect=(Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n};\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DialogItem = (props:any) => {\r\n\r\n    return (\r\n\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nDialogItem.propTypes = {\r\n    id: PropTypes.number,\r\n    name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Message = (props:any) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div>\r\n            {props.message}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nMessage.propTypes={\r\n    message: PropTypes.string,\r\n}\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport  {Field,reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../features/validates/validates\";\r\nimport {TextAria} from \"../../features/formControls/formControls\";\r\n\r\nconst maxLength=maxLengthCreator(50)\r\n\r\nconst Dialogs = (props: any) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map((d: any) =>\r\n        <DialogItem id={d.id} name={d.dialogName} key={d.id}/>);\r\n\r\n    let messagesElements = state.messages.map((m: any) =>\r\n        <Message key={m.id} message={m.message}/>);\r\n\r\n    let addNewMessage = (values: any) => {\r\n        props.sendMessage(values.newMessage);\r\n        values.newMessage=''\r\n    };\r\n\r\n    return <div className={s.dialogs}>\r\n\r\n        <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>{messagesElements}</div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\nconst AddMessageForm = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                <Field component={TextAria}\r\n                       name={'newMessage'}\r\n                       placeholder='enter your message'\r\n                       className={s.newMessage}\r\n                validate={[required,maxLength]}/>\r\n            </div>\r\n            <div className={s.addMessageBtn}>\r\n                <button type='submit'> Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageReduxForm=reduxForm({\r\n    form:'dialog'\r\n    }\r\n)(AddMessageForm)\r\n\r\nexport default Dialogs;","\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAythRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {getDialogsPage} from \"../../redux/Selectors/selectors\";\r\nimport {sendMessage} from \"../../redux/dialogsReducer\";\r\n\r\nconst mapStateToProps = (state:any) => {\r\n    return {\r\n        dialogsPage: getDialogsPage(state)\r\n    }\r\n};\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {sendMessage})\r\n)(Dialogs);\r\n// export default withAuthRedirect(connect(mapStateToProps, {updateNewMessageBody,sendMessage})(Dialogs));\r\n"],"sourceRoot":""}