{"version":3,"sources":["dal/apiSdk.ts","redux/dialogsReducer.ts","Components/Login/Login.module.css","assets/img/preloader.svg","redux/statuses.ts","Components/Nav/Nav.module.css","Components/Nav/Friends/Friends.module.css","redux/usersReduser.ts","serviceWorker.tsx","Components/Login/Login.tsx","redux/AuthReduser.ts","Components/Login/LoginConteiner.tsx","Components/Header/Header.tsx","Components/Header/HeaderContainer.tsx","redux/appReduser.ts","redux/sidebarReducer.ts","redux/userReduser.ts","redux/StatusReduser.ts","redux/redux_store.js","Components/Nav/Friends/Friends.tsx","Components/Nav/Navbar.tsx","App.js","index.tsx","redux/Selectors/selectors.ts","features/formControls/formControls.tsx","features/formControls/formControl.module.css","Components/Header/Header.module.css","features/validates/validates.tsx","Components/common/Preloader/Preloader.tsx","redux/profileReducer.ts"],"names":["__webpack_require__","d","__webpack_exports__","instance","usersAPI","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","n","axios","create","baseURL","withCredentials","headers","API-KEY","getUsers","pageNumber","pageSize","get","concat","then","response","data","followUser","userId","post","unfollowUser","delete","getProfile","userIdFromUrl","getProfileStatus","updateProfileStatus","status","put","postLogin","email","password","rememberMe","arguments","length","undefined","captcha","getCaptcha","authMe","logOut","initialState","dialogs","id","dialogName","messages","message","sendMessage","newMessage","type","dialogsReducer","state","action","body","Object","D_React_SN_my_project1_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","D_React_SN_my_project1_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","module","exports","loginPage","p","statuses","NOT_INITIALIZED","ERROR","IN_PROGRESS","CAPTCHAREQUIRED","SUCCESS","nav","item","active","friends","items","avatar","users","totalUsersCount","currentPage","isFetching","followingInProgress","dispatch","togleIsFetching","setUsers","setTotalUsersCount","totalCount","togleFollowingProgress","resultCode","follow","unfollow","setCurrentPage","UsersReducer","filter","map","u","followed","Boolean","window","location","hostname","match","sizePasswordWarning","value","LoginReduxForm","reduxForm","form","_ref","props","login","isAuth","objectWithoutProperties","captchaUrl","captchaRequired","errorMessageBlock","react_default","a","createElement","className","error","onSubmit","handleSubmit","Field","component","Input","name","placeholder","validate","required","warn","Fragment","src","disabled","style","color","Login","react_router","to","styles","assign","values","loginT","captchaValue","initialValues","userInfo","userName","getAuthUserData","getState","setIsAuth","setUserInfo","setStatus","setMessage","changeInputValue","propertyName","propertyValye","payload","AuthReducer","objectSpread","defineProperty","compose","connect","getIsAuthValue","getReducerUserInfo","stopSubmit","_error","url","Header","s","header","logo","alt","loginBlock","onClick","react_router_dom","HeaderContainer","Components_Header_Header","this","Component","getAuthUserName","initialized","initializedSuccess","appReducer","ava","sidebarReducer","profile","aboutMe","contacts","skype","vk","facebook","icq","googlePlus","twitter","instagram","whatsApp","lookingForAJob","lookingForAJobDescription","fullName","editMode","UserReducer","key","StatusReducer","combinedReducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","auth","usersPage","userProfile","formReducer","app","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","Friends","friend","Navbar","activeClassName","Nav_Friends_Friends","DialogsContainer","React","lazy","e","bind","ProfileContainer","UsersContainer","App","initializeApp","Header_HeaderContainer","Nav_Navbar","react","fallback","Preloader","path","render","exact","LoginConteiner","AppContainer","withRouter","MainApp","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","getUsersFromReduser","getStatusValue","getIsFetchingValue","getPageSize","getTotalUserCount","getCurrentPage","getFollowingInProgress","getProfileFromId","getUserStatusFromReducer","getDialogsPage","getProfilePosts","getAutorizedId","posts","TextAria","input","meta","restprops","D_React_SN_my_project1_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","react__WEBPACK_IMPORTED_MODULE_1___default","formControl","_ref$meta","warning","maxLengthCreator","max","preLoader","likeCount","getUserInfo","setUserProfile","getUserStatus","updateUserStatus","alert","addPost","postText"],"mappings":"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","file":"static/js/main.8dca3d0f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'db26107a-a86c-4eaf-937e-642d89d695c5'}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(pageNumber: number, pageSize: number) {\r\n        return instance.get(`users?page=${pageNumber}&count=${pageSize}`,)\r\n            .then(response => response.data)\r\n    },\r\n    followUser(userId:number){\r\n        return instance.post(`follow/${userId}`)\r\n            .then((response) => response.data)\r\n    },\r\n    unfollowUser(userId:number){\r\n        return instance.delete(`follow/${userId}`,)\r\n            .then((response) => response.data)\r\n    },\r\n    };\r\nexport const profileAPI={\r\n    getProfile(userIdFromUrl:number){\r\n        return instance.get(`profile/${userIdFromUrl}`)\r\n            .then((response) =>response.data)\r\n    },\r\n    getProfileStatus(userId:number){\r\n        return instance.get(`/profile/status/`+userId)\r\n            .then((response) =>response.data)\r\n    },\r\n    updateProfileStatus(status:string){\r\n        return instance.put(`/profile/status`,{status})\r\n            .then((response) =>response.data)\r\n    }\r\n\r\n}\r\n\r\n export const authAPI={\r\n     postLogin(email:string,password:string,rememberMe:boolean=false,captcha:any){\r\n     return instance.post('auth/login', {\r\n         email,\r\n         password,\r\n         rememberMe,\r\n         captcha\r\n     }).then((response) =>response.data)\r\n     },\r\n     getCaptcha(){\r\n        return  instance.get('security/get-captcha-url')\r\n             .then((response) =>response.data)\r\n     },\r\n     authMe(){\r\n         return instance.get('auth/me')\r\n             .then((response) =>response.data)\r\n     },\r\n     logOut(){\r\n         return instance.post('auth/logout')\r\n             .then((response) =>response.data)\r\n     }\r\n }\r\n","const SEND_MESSAGE = 'SN/DIALOGSPAGE/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, dialogName: 'Max'},\r\n        {id: 2, dialogName: 'Anna'},\r\n        {id: 3, dialogName: 'Dmitri'},\r\n        {id: 4, dialogName: 'Vlad'},\r\n        {id: 5, dialogName: 'Tany'},\r\n        {id: 6, dialogName: 'Ira'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi, dear friend!'},\r\n        {id: 2, message: 'It is my first project'}\r\n    ],\r\n}\r\nconst dialogsReducer = (state = initialState, action:any) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let body = action.newMessage;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 3, message: body}],\r\n\r\n            };\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const sendMessage = (newMessage:string) => ({type: SEND_MESSAGE,newMessage});\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__3SIUp\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.63a54e17.svg\";","\r\nexport  const statuses= {\r\n    NOT_INITIALIZED: 'NOT_INITIALIZED',\r\n    ERROR: 'ERROR',\r\n    IN_PROGRESS: 'IN_PROGRESS',\r\n    CAPTCHAREQUIRED: 'CAPTCHAREQUIRED',\r\n    SUCCESS: 'SUCCESS'\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3m3pa\",\"item\":\"Nav_item__1syv0\",\"active\":\"Nav_active__3OwIH\",\"friends\":\"Nav_friends__17EFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1uHJS\",\"items\":\"Friends_items__3yR9w\",\"avatar\":\"Friends_avatar__2OACI\"};","import {usersAPI} from \"../dal/apiSdk\";\r\nimport {statuses} from \"./statuses\";\r\n\r\nconst FOLLOW = 'SN/USERS/FOLLOW';\r\nconst UNFOLLOW = 'SN/USERS/UNFOLLOW';\r\nconst SET_USERS = 'SN/USERS/SETUSERS';\r\nconst SET_STATUS = 'SN/USERS/SET_STATUS';\r\nconst SET_CURRENT_PAGE = 'SN/USERS/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SN/USERS/SET_TOTAL_USERS_COUNT';\r\nconst TOGLE_IS_FETCHING = 'SN/USERS/TOGLE_IS_FETCHING';\r\nconst TOGLE_FOLLOWING_PROGRESS = 'SN/USERS/TOGLE_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    status: statuses.NOT_INITIALIZED,\r\n    users: [],\r\n    pageSize: 12,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [0]\r\n};\r\nconst UsersReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: state.status\r\n            };\r\n        case TOGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            };\r\n        case TOGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id) => id !== action.userId)\r\n            };\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u: any) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u: any) => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalCount};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        default:\r\n            return state\r\n    }\r\n};\r\nexport const getUsers = (pageNumber = 1,pageSize=12) => (dispatch: Function) => {\r\n    dispatch(togleIsFetching(true));\r\n    usersAPI.getUsers(pageNumber, pageSize).then(data => {\r\n\r\n        dispatch(togleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    })\r\n};\r\nexport const followUser = (userId: number) => (dispatch: Function) => {\r\n    dispatch(togleIsFetching(true));\r\n    dispatch(togleFollowingProgress(true, userId));\r\n    usersAPI.followUser(userId)\r\n        .then((data) => {\r\n            dispatch(togleIsFetching(false));\r\n            (data.resultCode === 0) && dispatch(follow(userId));\r\n            dispatch(togleFollowingProgress(false, userId));\r\n\r\n        })\r\n};\r\nexport const unfollowUser = (userId: number) => (dispatch: Function) => {\r\n    dispatch(togleIsFetching(true));\r\n    dispatch(togleFollowingProgress(true, userId));\r\n\r\n    usersAPI.unfollowUser(userId)\r\n        .then((data) => {\r\n            dispatch(togleIsFetching(false));\r\n            (data.resultCode === 0) && dispatch(unfollow(userId));\r\n            dispatch(togleFollowingProgress(false, userId));\r\n        })\r\n};\r\n\r\nexport const follow = (userId: number) => ({type: FOLLOW, userId});\r\nexport const togleIsFetching = (isFetching: boolean) => ({type: TOGLE_IS_FETCHING, isFetching});\r\nexport const togleFollowingProgress = (isFetching: boolean, userId: number) => {\r\n    return ({type: TOGLE_FOLLOWING_PROGRESS, isFetching, userId})\r\n};\r\nexport const unfollow = (userId: number) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users: any) => ({type: SET_USERS, users});\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: SET_TOTAL_USERS_COUNT, totalCount});\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status});\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport default UsersReducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config:any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl:any, config:any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl:any, config:any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport {statuses} from \"../../redux/statuses\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from './Login.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required} from \"../../features/validates/validates\";\r\nimport {Input} from \"../../features/formControls/formControls\";\r\n\r\n\r\nlet Login = (props: any) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to='/profile'/>\r\n    }\r\n\r\n    let onhandleSubmit = (values: any) => {\r\n        debugger\r\n        props.loginT(values.email, values.password, values.rememberMe, values.captchaValue);\r\n    }\r\n\r\n    return <div className={styles.loginPage}>\r\n        <h2>Login</h2>\r\n        <LoginReduxForm onSubmit={onhandleSubmit} {...props} initialValues={props.state}/>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nlet sizePasswordWarning = (value: string) => {\r\n\r\n    if (value && (value.length < 5)) return 'Field is too short!'\r\n    return undefined\r\n}\r\n\r\nlet LoginForm = ({state, login, isAuth, ...props}: any) => {\r\n    let {status, message, captchaUrl, captchaRequired} = state;\r\n\r\n    let errorMessageBlock = status === statuses.ERROR &&\r\n        <div className='error'>{props.error}</div>\r\n\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><Field component={Input} type='text'\r\n                    name='email' placeholder='Your e-mail' validate={[required]}/>\r\n        </div>\r\n        <div><Field component={Input} type='password'\r\n                    name='password' placeholder='Your password' validate={[required]}\r\n                    warn={sizePasswordWarning}/>\r\n        </div>\r\n\r\n        <div><Field component={Input} type='checkbox'\r\n                    name='rememberMe'/>remember me\r\n        </div>\r\n\r\n        {captchaRequired && <>\r\n            <div><Field component={Input} type='text'\r\n                        name='captchaValue' placeholder='Enter captcha'/>\r\n            </div>\r\n\r\n            <div><img src={captchaUrl}/></div>\r\n        </>}\r\n        <div>\r\n            <button type='submit' disabled={status === statuses.IN_PROGRESS}>Login\r\n            </button>\r\n        </div>\r\n        <div style={{color: 'red'}}>\r\n            {errorMessageBlock}\r\n        </div>\r\n\r\n\r\n    </form>\r\n};\r\nlet LoginReduxForm = reduxForm({\r\n    form: 'login-form'\r\n})(LoginForm)\r\n\r\nexport default Login\r\n","import {authAPI} from \"../dal/apiSdk\";\r\nimport {statuses} from \"./statuses\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_IS_AUTH = 'SN/AUTH/SET_IS_AUTH';\r\nconst SET_USER_INFO = 'SN/AUTH/SET_USER_INFO';\r\nconst SET_STATUS = 'SN/AUTH/SET_STATUS';\r\nconst SET_MESSAGE = 'SN/AUTH/SET_MESSAGE';\r\nconst CHANGE_iNPUT_VALUE = 'SN/AUTH/CHANGE_iNPUT_VALUE';\r\n\r\n\r\nlet initialState = {\r\n    status: statuses.NOT_INITIALIZED,\r\n    isAuth: false,\r\n    userInfo: {\r\n        userId: null,\r\n        userName: null,\r\n        email: null\r\n    },\r\n    captchaRequired: false,\r\n    captchaUrl: 'https://www.google.by/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png',\r\n    captchaValue: '',\r\n    message: ''\r\n};\r\n\r\nconst AuthReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        case SET_IS_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.value\r\n            };\r\n        case SET_USER_INFO:\r\n            return {\r\n                ...state,\r\n                userInfo:{...state.userInfo,...action.payload}\r\n\r\n            };\r\n        case SET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            };\r\n        case CHANGE_iNPUT_VALUE:\r\n            return {\r\n                ...state,\r\n                [action.propertyName]: action.propertyValye\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const getAuthUserData = () => (dispatch: Function, getState: Function) => {\r\n   return authAPI.authMe()\r\n        .then(data => {\r\n            if (!data.resultCode) {\r\n                dispatch(setIsAuth(true));\r\n                dispatch(setUserInfo(data.data.id, data.data.login, data.data.email,true))\r\n\r\n            }\r\n        })\r\n};\r\n\r\nexport const loginT = (email: string, password: string, rememberMe = false, captcha = null) => (dispatch: Function) => {\r\n    dispatch(setStatus(statuses.IN_PROGRESS));\r\n    authAPI.postLogin(email, password, rememberMe, captcha)\r\n        .then(data => {\r\n\r\n            switch (data.resultCode) {\r\n                case 0:\r\n                    dispatch(setStatus(statuses.SUCCESS));\r\n                    dispatch(setIsAuth(true));\r\n                    dispatch(getAuthUserData());\r\n                    break;\r\n                case 1:\r\n                    dispatch(setStatus(statuses.ERROR));\r\n                    let message=data.messages.length>0?data.messages[0]:'Some errror';\r\n                    dispatch(setStatus(statuses.ERROR));\r\n                    dispatch(stopSubmit('login-form',{_error:message}));\r\n                   break;\r\n                case 10:\r\n                    dispatch(setStatus(statuses.ERROR));\r\n                    dispatch(setMessage(data.messages[0]));\r\n                    dispatch(changeInputValue('captchaRequired', true));\r\n                    authAPI.getCaptcha()\r\n                        .then(data => {\r\n                            dispatch(changeInputValue('captchaUrl', data.url))\r\n                        })\r\n            }\r\n\r\n        })\r\n};\r\nexport const logOut = () => (dispatch: Function) => {\r\n    authAPI.logOut()\r\n        .then(data => {\r\n            dispatch(setIsAuth(false));\r\n            dispatch(setUserInfo(null, null, null,false))\r\n        })\r\n};\r\nexport const setStatus = (status:string) => ({type: SET_STATUS, status});\r\nexport const setMessage = (message:string) => ({type: SET_MESSAGE, message});\r\nexport const changeInputValue = (propertyName:string, propertyValye:any) => ({\r\n    type: CHANGE_iNPUT_VALUE,\r\n    propertyName,\r\n    propertyValye\r\n});\r\nexport const setIsAuth = (value: boolean) => ({type: SET_IS_AUTH, value});\r\nexport const setUserInfo = (userId: any, userName: any, email: any, isAuth:boolean) => ({\r\n    type: SET_USER_INFO,\r\n    payload: {userId, userName, email,isAuth}\r\n});\r\nexport default AuthReducer;","import {connect} from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport {getIsAuthValue, getReducerUserInfo} from \"../../redux/Selectors/selectors\";\r\nimport {compose} from \"redux\";\r\nimport {loginT} from \"../../redux/AuthReduser\";\r\n\r\nlet mapStateToProps = (state:any) => ({\r\n    isAuth: getIsAuthValue(state),\r\n    state: getReducerUserInfo(state)\r\n});\r\nexport default compose(connect(mapStateToProps, {loginT})\r\n)(Login);\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\nexport interface Ilogin {\r\n    isAuth: boolean,\r\n    userName: string,\r\n    logOut: Function\r\n\r\n}\r\n\r\nconst Header = ({isAuth, userName, logOut}: Ilogin) => {\r\n\r\n    let onLogOutClick = () => {\r\n        logOut();\r\n\r\n    };\r\n    return <>\r\n        <header className={s.header}>\r\n\r\n            <img className={s.logo} src={'https://www.logogenie.net/download/preview/medium/3800412'} alt={'logo'}/>\r\n            <div className={s.loginBlock}>\r\n                {isAuth ? <><>{userName}</>\r\n                        <div onClick={onLogOutClick}>Log out</div>\r\n                    </>\r\n                    :\r\n                    <><NavLink to='/login'>Sign in</NavLink></>\r\n\r\n                }\r\n            </div>\r\n\r\n        </header>\r\n    </>\r\n\r\n};\r\nexport default Header;","import React,{Component} from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logOut} from \"../../redux/AuthReduser\";\r\nimport {getAuthUserName, getIsAuthValue} from \"../../redux/Selectors/selectors\";\r\n\r\n interface IProps{\r\n     getAuthUserData: Function,\r\n     isAuth:boolean,\r\n     logOut: Function,\r\n     userName:string\r\n }\r\n\r\n class HeaderContainer extends Component <IProps>{\r\n\r\n     render() {\r\n       return <Header {...this.props}/>\r\n    }\r\n}\r\nlet mapStateToProps=(state:any)=>{\r\n    return{\r\n        isAuth:getIsAuthValue(state),\r\n        userName:getAuthUserName(state)\r\n    }\r\n    }\r\nexport default connect(mapStateToProps,{getAuthUserData,logOut})(HeaderContainer)\r\n","import {getAuthUserData} from \"./AuthReduser\";\r\n\r\nconst SET_INITIALIZED_SUCCESS = 'SN/AUTH/SET_INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\ninitialized:false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const initializeApp = () => (dispatch: Function, getState: Function) => {\r\nlet promise=dispatch(getAuthUserData());\r\n    promise.then(()=>dispatch(initializedSuccess()))\r\n\r\n};\r\n\r\n\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED_SUCCESS});\r\n\r\nexport default appReducer;\r\n","\r\nlet initialState={\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: 'Irina',\r\n            ava: 'http://s.gama-gama.ru/userupload/138/2c4bb3089f7905628b272dc1b855e83c.jpg'\r\n        },\r\n        {id: 2, name: 'Nata', ava: 'https://whatsism.com/uploads/posts/2018-05/thumbs/1525374264_7f85e7b.jpeg'},\r\n        {id: 3, name: 'Stas', ava: 'https://pixelbox.ru/wp-content/uploads/2018/02/spiderman_steam_avatar.jpg'}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer=(state=initialState, action:any)=>{\r\nreturn state;\r\n}\r\nexport default sidebarReducer;","import { instance} from \"../dal/apiSdk\";\r\nimport {togleIsFetching} from \"./usersReduser\";\r\n\r\nconst SET_USER_PROFILE = 'SN/USERS/SET_USER_PROFILE ';\r\nconst SET_EDIT_MODE = 'SN/USERS/SET_EDIT_MODE ';\r\nconst UPDATE_CONTACT = 'SN/USERS/UPDATE_CONTACT';\r\n\r\n\r\nlet initialState = {\r\n    profile:{\r\n        aboutMe:'About me',\r\n        contacts: {\r\n            skype: \"skyp\",\r\n            vk: \"vk.com\",\r\n            facebook: \"facebook\",\r\n            icq: \"icq\",\r\n            email: \"email\",\r\n            googlePlus: \"gogep\",\r\n            twitter: \"twitter\",\r\n            instagram: \"instagra\",\r\n            whatsApp: \"watsap\"\r\n        },\r\n        lookingForAJob:true,\r\n        lookingForAJobDescription: true,\r\n        fullName:'Tatyana'\r\n    },\r\n    editMode: false,\r\n\r\n};\r\n\r\nconst UserReducer = (state = initialState, action:any) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_PROFILE:\r\n            return{\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_EDIT_MODE:\r\n            return {\r\n                ...state,\r\n                editMode: action.value\r\n            };\r\n\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                profile: {\r\n                    ...state.profile,\r\n                    contacts: {\r\n                        ...state.profile.contacts,\r\n                        [action.key]: action.value\r\n                    }\r\n                }\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\nexport const getUserInfo = (userIdFromUrl:number) => (dispatch:Function) => {\r\n    dispatch(togleIsFetching(true));\r\n    instance.get(`/profile/${userIdFromUrl}`)\r\n        .then((response) => {\r\n            dispatch(setUserProfile(response.data))\r\n            dispatch(togleIsFetching(false));\r\n        })\r\n\r\n}\r\nexport const setNewContact = (profile:Object) => (dispatch:Function) => {\r\n        // let {aboutMe, contacts, lookingForAJob,lookingForAJobDescription, fullName}=profile\r\n    // let state = getState().userProfile;\r\n    // dispatch(togleIsFetching(true));\r\n    instance.put('profile',profile)\r\n        .then((response) => {\r\n            (response.data.resultCode===0)&&dispatch(setEditMode(false));\r\n\r\n        })\r\n\r\n}\r\nexport const setUserProfile = (profile:Object) => ({type: SET_USER_PROFILE, profile});\r\nexport const setEditMode = (value:boolean) => ({type: SET_EDIT_MODE, value});\r\nexport const updateContact = (value:string, key:string) => ({type: UPDATE_CONTACT, value, key});\r\nexport default UserReducer;","let initialState={\r\n    status:'change',\r\n    editMode: false\r\n}\r\nlet StatusReducer=(state = initialState, action:any)=>{\r\n    switch (action.type){\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default StatusReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport UsersReducer from \"./usersReduser\";\r\nimport UserReducer from \"./userReduser\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport StatusReducer from \"./StatusReduser\";\r\nimport AuthReducer from \"./AuthReduser\";\r\nimport thunk from \"redux-thunk\";\r\nimport appReducer from \"./appReduser\";\r\n\r\n\r\n\r\nlet combinedReducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    auth:AuthReducer,\r\n    usersPage:UsersReducer,\r\n    userProfile:UserReducer,\r\n    status:StatusReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n});\r\n\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    let store = createStore(combinedReducers,\r\n        composeEnhancer(applyMiddleware(thunk)));\r\n\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport s from './Friends.module.css';\r\n\r\nconst FriendItem = (props: any) => {\r\n    return (\r\n\r\n        <div className={s.friend}>\r\n            <img className={s.avatar}\r\n                 src={'http://s.gama-gama.ru/userupload/138/2c4bb3089f7905628b272dc1b855e83c.jpg'}/>\r\n            <div> Irina</div>\r\n        </div>\r\n    )\r\n}\r\nconst Friends = (props: any) => {\r\n    return (<div className={s.friends}>\r\n            <h4> Friends</h4>\r\n            <div className={s.items}>\r\n                <div className={s.friend}>\r\n                    <img className={s.avatar}\r\n                         src={'http://s.gama-gama.ru/userupload/138/2c4bb3089f7905628b272dc1b855e83c.jpg'}/>\r\n                    <div> Irina</div>\r\n                </div>\r\n                <div className={s.friend}>\r\n                    <img className={s.avatar}\r\n                         src={'https://whatsism.com/uploads/posts/2018-05/thumbs/1525374264_7f85e7b.jpeg'}/>\r\n                    <div> Nata</div>\r\n                </div>\r\n                <div className={s.friend}>\r\n                    <img className={s.avatar}\r\n                         src={'https://pixelbox.ru/wp-content/uploads/2018/02/spiderman_steam_avatar.jpg'}/>\r\n                    <div> Stas</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n}\r\nexport default Friends;","import React from 'react';\r\nimport s from './Nav.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"./Friends/Friends\";\r\n\r\nconst Navbar = (props: any) => {\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.active}>\r\n                    Profile\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/dialogs'} activeClassName={s.active}>\r\n                    Messages\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/users'} activeClassName={s.active}>\r\n                    Users\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={'/music'} activeClassName={s.active}>\r\n                    Music\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>\r\n                    Settings\r\n                </a>\r\n            </div>\r\n            <div className={s.friends}>\r\n                <Friends friends={props.friends}/>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n\r\n};\r\nexport default Navbar;","import React, {Suspense} from \"react\";\nimport \"./App.css\";\nimport LoginContainer from \"./Components/Login/LoginConteiner\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/appReduser\";\nimport Preloader from \"./Components/common/Preloader/Preloader\";\nimport store from \"./redux/redux_store\";\nimport Navbar from \"./Components/Nav/Navbar\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Route, withRouter} from \"react-router\";\n\nconst DialogsContainer=React.lazy(()=>import(\"./Components/Dialog/DialogsConteiner\"))\nconst ProfileContainer=React.lazy(()=>import(\"./Components/Profile/ProfileContainer\"))\nconst UsersContainer=React.lazy(()=>import(\"./Components/Users/UsersConteiner\"))\n// const UserContainer=React.lazy(()=>import(\"./Components/Users/UserContainer\"))\n\n// interface IProps{\n//     initialised: ()=>void,\n//     location:any,\n//     store:any\n// }\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n\n        if (!this.props.initialized) return <Preloader/>\n        return (\n            <div className={'app-wrapper'}>\n                <HeaderContainer/>\n                <Navbar friends={this.props.store}/>\n                <div className={'app-wrapper-content'}>\n                    <Suspense fallback={<Preloader/>}>\n                    <Route path='/profile/:userId?' render={() =>\n                        <ProfileContainer/>}/>\n                        <Route exact path='/profile' render={() =>\n                            <ProfileContainer/>}/>\n                    <Route path='/dialogs' render={() =>\n                        <DialogsContainer/>}/>\n                    <Route exact path='/users' render={() => <UsersContainer/>}/>\n                    <Route exact path='/login' render={() => <LoginContainer/>}/>\n                    {/*<Route path='/users/:userId' render={() => <>*/}\n                    {/*    <UserContainer/></>}/>*/}\n                    </Suspense>\n                </div>\n            </div>\n\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        initialized: state.app.initialized\n    }\n)\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);\n\nconst MainApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer store={store}/>\n        </Provider>\n    </BrowserRouter>\n}\nexport default MainApp;\n","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from 'react-dom';\nimport MainApp from \"./App\";\n\n\n\nReactDOM.render(<MainApp/>,document.getElementById('root'));\n// window.store = store;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const getIsAuthValue=(state:any)=>{\r\nreturn state.auth.isAuth;\r\n};\r\n\r\nexport const getReducerUserInfo=(state:any)=>{\r\n    return state.auth;\r\n};\r\nexport const getUserProfile=(state:any)=>{\r\n    return state.userProfile.profile;\r\n};\r\n\r\nexport const getProfileEditMode=(state:any)=>{\r\n    return state.userProfile.editMode;\r\n};\r\n\r\nexport const getUsersFromReduser=(state:any)=>{\r\n    return  state.usersPage.users;\r\n};\r\n\r\nexport const getStatusValue=(state:any)=>{\r\n    return  state.usersPage.status;\r\n};\r\n\r\nexport const getIsFetchingValue=(state:any)=>{\r\n    return  state.usersPage.isFetching;\r\n};\r\n\r\nexport const getPageSize=(state:any)=>{\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUserCount=(state:any)=>{\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage=(state:any)=>{\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getFollowingInProgress=(state:any)=>{\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getProfileFromId=(state:any)=>{\r\n    return  state.profilePage.profile;\r\n};\r\nexport const getUserStatusFromReducer=(state:any)=>{\r\n    return  state.profilePage.status;\r\n};\r\nexport const getDialogsPage=(state:any)=>{\r\n    return state.dialogsPage;\r\n}\r\nexport const getAuthUserName=(state:any)=>{\r\n    return state.auth.userName\r\n};\r\nexport const getProfilePosts=(state:any)=>{\r\n    return state.profilePage.posts;\r\n}\r\nexport const getAutorizedId=(state:any)=>{\r\n    return state.auth.userInfo.userId;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './formControl.module.css'\r\n\r\nexport const  TextAria=(props:any)=>{\r\n    const {input,meta,...restprops}=props\r\n    const hasError=meta.touched&&meta.error\r\n    return <div className={styles.formControl+\" \"+(hasError?styles.error:'')}>\r\n        <textarea {...input} {...restprops}/>\r\n        <div>{hasError&&<span> {meta.error}</span>}</div>\r\n    </div>\r\n}\r\nexport let Input = ({input, meta:{touched,error,warning}, ...props}:any) => {\r\n    const hasError=touched&&error\r\n    return <div className={styles.formControl+\" \"+(hasError?styles.error:'')}>\r\n        <input {...input} type={props.type} {...props} />\r\n\r\n        {hasError && <span> {error}</span>}\r\n        {touched && warning && <span style={{color: 'orange'}}> {warning}</span>}\r\n    </div>\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"formControl_error__TIDQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__SCq3r\",\"logo\":\"Header_logo__2axTT\",\"loginBlock\":\"Header_loginBlock__2XLTp\"};","export const   required=(value:any)=>{\r\n    if (!value) return 'Field is required'\r\n    return undefined\r\n}\r\nexport const maxLengthCreator=(max:any)=>(value:any)=>{\r\n    if (value&&value.length>max) return `Max length is ${max} symbols`\r\n    return undefined\r\n}","import preLoader from \"../../../assets/img/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader=(props:any)=>{\r\n    return(\r\n        <div><img src={preLoader}/></div>\r\n    )\r\n}\r\n export default Preloader","import {togleIsFetching} from \"./usersReduser\";\r\nimport {profileAPI} from \"../dal/apiSdk\";\r\n\r\n\r\nconst SET_USER_PROFILE = 'SN/PROFILEPAGE/SET_USER_PROFILE ';\r\nconst SET_STATUS = 'SN/PROFILEPAGE/SET_STATUS ';\r\nconst ADD_POST = 'SN/PROFILEPAGE/ADD-POST';\r\nconst DELETE_POST = 'SN/PROFILEPAGE/DELETE_POST';\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    status:'',\r\n    posts: [\r\n        {id: 1, message: 'Good night', likeCount: 123},\r\n        {id: 2, message: 'This good idea', likeCount: 12},\r\n        {id: 3, message: 'Second post', likeCount: 1},\r\n        {id: 4, message: 'This my first post', likeCount: 118}\r\n    ]\r\n};\r\nconst profileReducer = (state = initialState, action: any) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST : {\r\n            return {\r\n                ...state,\r\n                posts: [{id: 5,\r\n                    message: action.postText,\r\n                    likeCount: 0},\r\n                    ...state.posts],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p=>p.id!==action.id)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const getUserInfo = (userId: number) => (dispatch: Function) => {\r\n    dispatch(togleIsFetching(true));\r\n    profileAPI.getProfile(userId)\r\n        .then((data) => {\r\n            dispatch(setUserProfile(data));\r\n            dispatch(togleIsFetching(false));\r\n        })\r\n};\r\nexport const getUserStatus = (userId: number) => (dispatch: Function) => {\r\n    // dispatch(togleIsFetching(true));\r\n    profileAPI.getProfileStatus(userId)\r\n        .then((data) => {\r\n            dispatch(setStatus(data));\r\n            // dispatch(togleIsFetching(false));\r\n        })\r\n};\r\nexport const updateUserStatus = (status: string) => (dispatch: Function) => {\r\n    // dispatch(togleIsFetching(true));\r\n\r\n    profileAPI.updateProfileStatus(status)\r\n        .then((data) => {\r\n            if(data.resultCode===0){\r\n            dispatch(setStatus(status));\r\n            } else {\r\n                alert(data.messages)\r\n            }\r\n            // dispatch(togleIsFetching(false));\r\n        })\r\n};\r\n\r\nexport const setUserProfile = (profile: Object) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status: string) => ({type: SET_STATUS, status});\r\nexport const addPost = (postText:string) => ({type: ADD_POST,postText});\r\nexport const deletePost = (id:number) => ({type: DELETE_POST,id});\r\nexport default profileReducer;\r\n"],"sourceRoot":""}